pipeline {
  agent {
    docker {
      image 'maven:3.9.6-eclipse-temurin-17'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL = "http://13.201.98.207:9000"
    GIT_REPO_NAME = "jenkins_project"
    GIT_USER_NAME = "Ganesh31088500"
    DOCKER_IMAGE = "ultimate-cicd:${BUILD_NUMBER}"
    PATH = "/usr/share/maven/bin:/usr/bin:/bin" // Optional: ensures mvn is available
  }

  stages {
    stage('Clean Workspace') {
      steps {
        sh 'chown -R jenkins:jenkins . || true'
        cleanWs()
      }
    }

    stage('Checkout') {
      steps {
        checkout scm
      }
    }



    stage('Build and Test') {
      steps {
        sh """
          ls -ltr
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        """
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_AUTH_TOKEN')]) {
          sh """
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_URL}
          """
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          sh """
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          """
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "dockerhub-creds-id") {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'github-creds-id', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_TOKEN')]) {
          sh """
            git config user.email "ganeshpitchuka8@gmail.com"
            git config user.name "Ganesh31088500"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || true
            git push https://${GIT_USER}:${GIT_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          """
        }
      }
    }
  }
}
